sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]

project.ext.mainClassName = "com.phys.template.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

// Store the parameters you want to pass the texturePacker here...
project.ext.texturePacker = [ "core/rawAssets", "core/assets/skin", "uiskin" ]

// Import the texture packer
import com.badlogic.gdx.tools.texturepacker.TexturePacker

// Add a new task that packs the textures for you
task packTextures {
    doLast {
        if (project.ext.has('texturePacker')) {
            logger.info "Calling TexturePacker: "+texturePacker
            TexturePacker.Settings settings = new TexturePacker.Settings();
            settings.flattenPaths = true;
            TexturePacker.process(settings, texturePacker[0], texturePacker[1], texturePacker[2])
        }
    }
}


dist.dependsOn classes

eclipse.project.name = appName + "-desktop"
